name: Build
on: [push, pull_request]

env:
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  COMPOSER_BIN: ${{ github.workspace }}/vendor/bin
  BLT_DIR: ${{ github.workspace }}/vendor/acquia/blt
  BUILD_DIR: ${{ github.workspace }}
jobs:
  build:
    name: Before install
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
    steps:
      - name: Verify Docker dependencies
        run: |
          docker --version
          docker-compose --version
      - name: Install Lando
        run: |
          sudo wget "https://github.com/lando/cli/releases/download/v3.6.4/lando-linux-x64-v3.6.4" -O /usr/local/bin/lando
          sudo chmod +x /usr/local/bin/lando
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: SSH keys
        run: |
          # Make private key available from github secrets.
          mkdir -p ~/.ssh
          rm -fv ~/.ssh/id_rsa
          touch ~/.ssh/id_rsa
          echo "${{ secrets.CIDRUPALCZPRIVATE }}" >> ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          chmod 700 ~/.ssh/
          chmod 600 ~/.ssh/id_rsa
          ssh-add ~/.ssh/id_rsa
          # Bypass ~/.ssh/known_host and fix "Host key verification failed.".
          touch ~/.ssh/config
          chmod 600 ~/.ssh/config
          echo "Host *" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
      - name: Start lando
        run: |
          lando start
      - name: Cache composer
        uses: actions/cache@v2
        with:
          path: |
            $HOME/.composer/cache
            vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          lando composer self-update --1
          lando composer validate --no-check-all --ansi
          lando composer install --no-suggest
          echo ${COMPOSER_BIN} >> $GITHUB_PATH
      - name: Configure git
        run: |
          git config --global user.name "CI"
          git config --global user.email "ci@drupal.cz"
      - name: Run tests
        run: |
          lando blt validate:all --no-interaction || exit 1
          lando blt setup --environment=ci --no-interaction --verbose || exit 1
          lando blt tests:all --environment=ci --no-interaction --verbose || exit 1
      - name: Simulate deploy
        run: |
          lando blt artifact:deploy --dry-run --commit-msg "Automated commit by CI for Build ${{ github.run_id}}" --no-interaction --verbose
          rm -rf deploy
      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(git branch --show-current)"
        id: extract_branch
      - name: Run deploy on master and develop
        if: ${{ steps.extract_branch.outputs.branch == 'master' ||  steps.extract_branch.outputs.branch == 'develop' }}
        run: |
          lando blt artifact:deploy --commit-msg "Automated commit by CI for Build ${{ github.run_id}}" --branch "${{ steps.extract_branch.outputs.branch }}-build" --no-interaction --verbose
